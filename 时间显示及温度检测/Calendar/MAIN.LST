C51 COMPILER V9.00   MAIN                                                                  01/10/2013 17:30:28 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN MAIN.OBJ
COMPILER INVOKED BY: D:\Keil U4\C51\BIN\C51.EXE MAIN.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg51.h>
   2          #include<intrins.h>
   3          #define uint unsigned int
   4          #define uchar unsigned char
   5          sbit beep=P1^5;
   6          uchar ds1302_display[]="20  -  -    :  :  ";  //¼ÇÂ¼ÄêÔÂÈÕ Ê±·ÖÃëÐÅÏ¢
   7          uchar ds1302_day[][3]={{'M','O','N'},{'T','U','E'},{'W','E','N'},{'T','H','U'},{'F','R','I'},{'S','A','T'}
             -,{'S','U','N'}};        //ÒÀ´Î´ÓÐÇÆÚÒ»µ½ÐÇÆÚÈÕ
   8          uchar ds18b20_temp_tip[]="Temp has exceed!";
   9          /******************************
  10          *  º¯Êý¹¦ÄÜ£ºÈí¼þÑÓÊ±£¨Ô¼1ms£©
  11          *  Èë¿Ú²ÎÊý£ºuint xms
  12          *  ³ö¿Ú²ÎÊý£º
  13          *******************************/
  14          static void delayms(uint xms)
  15          {
  16   1              uint i,j;
  17   1              for(i=xms;i>0;i--)
  18   1                      for(j=110;j>0;j--);
  19   1      }
  20          /*************************************
  21          *  º¯Êý¹¦ÄÜ£º½«Ê®½øÖÆÂë×ª»»³ÉASCIIÂë
  22          *  Èë¿Ú²ÎÊý£ºuchar decimal
  23          *  ³ö¿Ú²ÎÊý£º
  24          *************************************/
  25          uchar decimal_character(uchar decimal)
  26          {
  27   1              return(decimal+48);
  28   1      }       
  29          int main()
  30          {       
  31   1      /***********µ÷ÓÃÍâ²¿º¯Êý¼°±äÁ¿ÉùÃ÷²¿·Ö****************/
  32   1              void lcd_initial();
  33   1              uchar bcd_decimal(uchar bcd);
  34   1              void lcd_writecommand(uchar command);
  35   1              void lcd_writedata(uchar dat);
  36   1              void ds1302_initial();
  37   1              uchar ds1302_read(uchar address);
  38   1              void ds1302_write(uchar address,uchar dat);
  39   1              void ds18b20_convert();
  40   1              uint ds18b20_deal();
  41   1      //      void ds18b20_set_alarm();
  42   1      //      void ds18b20_read_rom();
  43   1      //      void ds18b20_search_alarm();
  44   1              void keyone_scan();
  45   1              void keyfive_scan();
  46   1              void set_cursor();
  47   1              void set_alarm();
  48   1              void ds1820_readalarm();
  49   1              extern uchar code ds1302_write_ckaddress[];
  50   1              extern uchar code ds1302_read_ckaddress[];
  51   1              extern bit keyone_flag;
  52   1              extern bit keyfive_flag;
  53   1              extern uchar a;
  54   1              extern uchar b;
C51 COMPILER V9.00   MAIN                                                                  01/10/2013 17:30:28 PAGE 2   

  55   1      /***********µ÷ÓÃÍâ²¿º¯Êý¼°±äÁ¿ÉùÃ÷²¿·Ö****************/
  56   1              uchar k,m,n;
  57   1              lcd_initial();
  58   1              ds1302_initial();
  59   1      
  60   1              while(1)
  61   1              {       
  62   2                              keyone_scan();
  63   2                              keyfive_scan();
  64   2      //                      keytwo_scan();
  65   2                              if(keyone_flag==1)
  66   2                              {
  67   3                                      ds1302_write(ds1302_write_ckaddress[0],0x80|ds1302_read(ds1302_read_ckaddress[0]));      //Èç¹û¼ì²âµ½K1¼ü±
             -»°´ÏÂ£¬ÔòÏòSecond¼Ä´æÆ÷µÄ×î¸ßÎ»Ð´1£¬½øÈëstandby¹¤×÷Ä£Ê½
  68   3                                      set_cursor();
  69   3                                      keyone_flag=0;
  70   3                                      ds1302_write(ds1302_write_ckaddress[0],0x7f&ds1302_read(ds1302_read_ckaddress[0]));     //½«Second¼Ä´æÆ÷µÄ
             -×î¸ßÎ»Ð´0£¬½øÈëstart¹¤×÷Ä£Ê½
  71   3                              }
  72   2                              if(keyfive_flag==1)
  73   2                              {
  74   3                                      set_alarm();
  75   3                                      lcd_initial();
  76   3                                      keyfive_flag=0;  
  77   3                              }
  78   2                                      
  79   2      /********************´ÓDS1302ÖÐ¶Á³öµ±Ç°µÄÊ±¼äÊý¾Ý²¢×ª»¯³ÉASCIIÂë´æ´¢ÔÚÊý×éÖÐ******************************
             -/
  80   2                              ds1302_display[17]=decimal_character(bcd_decimal(ds1302_read(ds1302_read_ckaddress[0]))%10);  //Ãë
  81   2                              ds1302_display[16]=decimal_character(bcd_decimal(ds1302_read(ds1302_read_ckaddress[0]))/10);
  82   2                              ds1302_display[14]=decimal_character(bcd_decimal(ds1302_read(ds1302_read_ckaddress[1]))%10);  //·Ö
  83   2                              ds1302_display[13]=decimal_character(bcd_decimal(ds1302_read(ds1302_read_ckaddress[1]))/10);
  84   2                              ds1302_display[11]=decimal_character(bcd_decimal(ds1302_read(ds1302_read_ckaddress[2]))%10);  //Ê±
  85   2                              ds1302_display[10]=decimal_character(bcd_decimal(ds1302_read(ds1302_read_ckaddress[2]))/10);
  86   2                              ds1302_display[9]=decimal_character(bcd_decimal(ds1302_read(ds1302_read_ckaddress[3]))%10);       //ÈÕ
  87   2                              ds1302_display[8]=decimal_character(bcd_decimal(ds1302_read(ds1302_read_ckaddress[3]))/10);
  88   2                              ds1302_display[6]=decimal_character(bcd_decimal(ds1302_read(ds1302_read_ckaddress[4]))%10);       //ÔÂ
  89   2                              ds1302_display[5]=decimal_character(bcd_decimal(ds1302_read(ds1302_read_ckaddress[4]))/10);                                             
  90   2                              ds1302_display[3]=decimal_character(bcd_decimal(ds1302_read(ds1302_read_ckaddress[6]))%10);       //Äê
  91   2                              ds1302_display[2]=decimal_character(bcd_decimal(ds1302_read(ds1302_read_ckaddress[6]))/10);
  92   2      /*********************´ÓDS1302ÖÐ¶Á³öµ±Ç°µÄÊ±¼äÊý¾Ý²¢×ª»¯³ÉASCIIÂë´æ´¢ÔÚÊý×éÖÐ*****************************
             -*/
  93   2      
  94   2      /************½«´Óclock/calendar¼Ä´æÆ÷ÖÐ¶Á³öµÄÊ±¼äÊý¾ÝÒÀ´ÎÐ´ÈëLCD1602***********************/
  95   2                      lcd_writecommand(0x80);  
  96   2                      for(k=0;k<10;k++)
  97   2                      {
  98   3                              lcd_writedata(ds1302_display[k]);
  99   3                      }
 100   2                      lcd_writecommand(0x80+0x40);
 101   2                      for(m=10;m<18;m++)
 102   2                      {
 103   3                              lcd_writedata(ds1302_display[m]);
 104   3                      }
 105   2      /************½«´Óclock/calendar¼Ä´æÆ÷ÖÐ¶Á³öµÄÊ±¼äÊý¾ÝÒÀ´ÎÐ´ÈëLCD1602***********************/
 106   2      
 107   2              lcd_writecommand(0x80+0x0c);
 108   2                      for(n=0;n<3;n++)
 109   2                      {
 110   3                              lcd_writedata(ds1302_day[bcd_decimal(ds1302_read(ds1302_read_ckaddress[5]))-1][n]);     //½«dayÐÅÏ¢Ð´ÈëLCD1
             -602 
 111   3                      }
C51 COMPILER V9.00   MAIN                                                                  01/10/2013 17:30:28 PAGE 3   

 112   2                      
 113   2      /************½«´Óds18b20ÖÐ¶Á³öµÄÊý¾ÝÒÀ´ÎÐ´ÈëLCD1602***************/
 114   2                      ds18b20_convert();                       //×ª»»Íê±Ïºó£¬ds18b20½«½øÈëidle state,ËùÒÔÐèÒª·´¸´¿ªÆô
 115   2                      
 116   2                      lcd_writecommand(0x80+0x4c);
 117   2                      lcd_writedata(decimal_character(ds18b20_deal()/100));
 118   2                      lcd_writedata(decimal_character(ds18b20_deal()/10%10));
 119   2                      lcd_writedata(46);
 120   2                      lcd_writedata(decimal_character(ds18b20_deal()%10));
 121   2      /************½«´Óds18b20ÖÐ¶Á³öµÄÊý¾ÝÒÀ´ÎÐ´ÈëLCD1602***************/
 122   2              
 123   2      /*************DS13B20¼ì²âÎÂ¶ÈÊÇ·ñ³¬¹ýÉè¶¨Öµ*********************/
 124   2                      ds1820_readalarm();
 125   2                      if((ds18b20_deal())>(a*10)||(ds18b20_deal())<(b*10))
 126   2                      {
 127   3                              uchar i;
 128   3      //                      delayms(30);
 129   3                              lcd_writecommand(0x01);  //ÇåÆÁ
 130   3                              lcd_writecommand(0x80);
 131   3                              for(i=0;i<16;i++)
 132   3                              {
 133   4                                      lcd_writedata(ds18b20_temp_tip[i]);
 134   4                              }
 135   3                              lcd_writecommand(0x80+0x46); 
 136   3                              lcd_writedata(decimal_character(ds18b20_deal()/100));
 137   3                              lcd_writedata(decimal_character(ds18b20_deal()/10%10));
 138   3                              beep=~beep;
 139   3                              lcd_writedata(46);
 140   3                              lcd_writedata(decimal_character(ds18b20_deal()%10));
 141   3                              delayms(5000);
 142   3                              lcd_writecommand(0x01);;         //ÇåÆÁ
 143   3                      }
 144   2              }
 145   1              return 0;
 146   1      }
 147          
 148          
 149                                  
 150                                          
 151                                  
 152                                  
 153                          
 154                                  
 155                          
 156                          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    695    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     57       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
